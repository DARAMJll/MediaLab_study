seaborn -> 통계 기반 데이터 시각화
- 평균, 중간값, 사분위수(1사분위수(Q1) : 25% / 2사분위수(Q2) : 50% / 3사분위수(Q3) : 75% / 최댓값(100%) )
- 튀는 값이 있으면 평균이 크게 변함 -> 중간값 사용
- 수치형 데이터, 범주형 데이터(최빈값(mode))

- describe() 함수는 수치형 데이터만 요약 -> describe(include = 'all') 추가
- 데이터가 짝수 개일 때 1사분위수/3사분위수 계산 : 데이터의 총 개수 - 1 하고 원하는 숫자 곱해줌

*박스 플롯과 이상점
- 박스 중간의 점 : 중간값 / 아랫부분 : 1사분위수 / 윗부분 : 3사분위수 / 이상점 : Outlier(보통 제외됨)
- 이상점 범위 : IQR(1사분위수 - 3사분위수) 구하고, Q1 - 1.5IQR ~ Q3 + 1.5IQR 까지만 정상 범위로 정함
- 선 꼭다리의 선 : 최댓값 / 최솟값 
- q1 = df['english_score'].quantile(0.25)

*히스토그램(연속, 이산 다 사용)
- 이산형 데이터(숫자가 딱 떨어짐) <-> 연속형 데이터(히스토그램 활용)
- kind = 'hist' , 기본적으로 구간은 10개로 나눠줌 , bins = 7 하면 막대 개수 정해줌

*모집단과 표본
- 기술통계(데이터 요약 및 핵심특징 파악), 추론통계(모집단, 표본 / 추론)

*확률 밀도 함수와 KDE plot
- 확률밀도함수 : 히스토그램 보완, 각 구간이 전체에서 차지하는 비중표시
- 연속형 데이터이기때문에 키가 정확히 173일 확률은 0임
- KDE plot : 전체를 추정함(kind = 'kde')
- bw_method = 0.1 / 분포 단순화, 복잡화 가능

* 데이터 분포의 모양
- 정규분포(가운데 중심 좌우대칭)
- Right - skewed(Positively-  skewed) : 왼쪽으로 쏠림  <-> Left-skewed(Negatively-skewed)
- 왜도(skewed) 정규분포 : 0 / Right = >0 / Left = <0 //왜도 절대값 클수록 더 많이 비뚤어짐
- Kurtosis(첨도) : 얼마나 뾰족한지

*분산과 표준편차
- 분산 : 편차 제곱의 평균( .var() ) / 표편 : ( .std() )
- 표본에서 분산을 구할 때는 (데이터 개수 - 1)로 나눔! (과소평가되는 걸 예방)
- numpy : n으로 나눔 / pandas : n - 1로 나눔

* 누적값 계산
- .cumsum() : 누적 합 / .cumprod() : 누적곱

*seaborn  : 간편하게 근사한 그래프 생성
-sns.barbplot(data = , x= , y = )
- sns.stripplot() : 산점도 표 / swarmplot : 값이 모여있으면 점이 모여있음
- sns.boxplot(order = [] ) 하면 표시되는 순서 바꿀 수 있음  / violinplot(KDE plot 을 좌우로 붙여놓은 모양
- sns.histplot / sns.kdeplot

*상관 관계 시각화
- 산점도 -> 상관관계(상관계수 사용)
- 상관계수 : 피어슨 상관계수 (-1 ~ 1) / 0 : 상관 없다 / >0 : 어떤 값이 커질 때 다른 값도 비례 / < 0 : 음의 상관관계
- 상관관계의 강도 : 상관계수가 얼마나 큰지? -> 절댓값이 1에 가까울수록 더 커짐
- sns.scatterplot()
- sns.regplot() : 회귀선 표시
- df.corr(numeric_only = True) #수치 데이터만 , 컬럼 간 상관계수 표시
- sns.heatmap : 상관계수 높을수록 진한 색